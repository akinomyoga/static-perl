package main {
  use EnumA;
  use EnumB;
  use EnumC;
  use Point;
  use Foo;
  use Foo::Point3D;
  use AAA;
}
package EnumA : enum {
  ONE,
  TWO,
  THREE = 4,
  FORE
}

package EnumB : enum {
  ONE = 5
}

package EnumC : enum {
}

package Point {
  use Class1;
  sub get1 ($var1 : Class1, $var2 : int) : int {
    my $var3 : int;
    my $var4 : int;

    {
      my $var3 : int;
      my $var4 : int;
    }
    
    {
      my $var3 : int;
      my $var4 : int;
    }
    
    $var3 = 3;
    $var3 = 4;
    
    $var4 = 6;
    
    my $var5 : int = sub ($foo : int, $bar : int) : int {
      
    };
  }
  
  sub get2 () : static long {
    1;
    my $var1 : int;
    my $var2 : int;
  }

  sub get3 () : int {}
  sub get4 ($foo : int) : int {}
  sub get5 ($foo : const int) : int {}
  sub get6 ($foo : const int) : int {}

  sub get7 ($foo : int, $bar : int) : int {}
  sub get8 ($foo : const int, $bar : const int) : int {}
  sub get9 ($foo : const int, $bar : const int) : int {}
}

package Foo {
  
}

package Foo::Point3D {

  use Point -pt;

  use Point;

  has x : int;
  has last : int;

  has title : const int;

  sub last ($foo : int) : int { }

  # subroutine
  sub sum1 () : double {
    2;
    4;
    "abcdefghijklnm";
  }
  sub sum2 ($foo : const int, $bar : const int) : static int { }

  sub sum3 ($foo : int, $bar : float) : int {
    if (3) {
    
    }
    
    if (3) {
      1;
    }
    elsif (4) {
      4;
    }
    else {
      
    }

    if (3) {
      1;
    }
    elsif (4) {
      4;
    }
    elsif (5) {
    
    }
    else {
      
    }
    
    if (1) {
      
    }
    else {
      
    }
    
    return 1;
  }

  sub sum4 () : static int {
    
    my $title : int;
    my $title1 : double = 4.1567;
   
    my $title2 : int;
    my $title3 : const int;
    my $title4 : const const int;
    my $title5 : int = 1;
    my $title6 : int;
    my $title7 : int = 4;

    $title->();
    $title->(1);
    $title->(1, 2);
    
    my $test : int = 0;
    ++$test;
    $test++;

    --$test;
    $test--;

    +$test;
    -$test;
    +$test - -$test;

    1 + 2;
    
    my $i : int;
    for ($i = 0; $i < 5; $i = $i + 1) {
      1;
      last;
      next;
    }

    1 > 2;
    1 >= 2;
    1 < 2;
    1 <= 2;

    1 == 1;
    $title != 2;

    1 = 1;


    1 - 4;

    1 || 2;
    1 | 2;

    1 && 2;
    1 & 3;

    $title += 1;

    $title -= 1;

    $title *= 1;
    $title /= 2;

    $title % $title;
    $title %= $title;

    $title ^ $title;
    $title ^= $title;

    !$title;
    ~$title;

    $title ||= 1;
    $title &&= 2;

    $title << 2;
    $title >> 2;

    $test->x;
    $test->sum();
    $test->sum(1);
    $test->sum(1, 2);

    Test->sum();
    Test->sum(1);
    Test->sum(1, 2);

    $test->x = 3;
    $test->last;


    while (1) {
      1;
    }
    "abcde";
    "";

    _sum();
    sum_foo();
    sum::foo();
    
    $title->[3];
    $title->[3] = 4;

    my $title8 : int = true;
    my $title9 : int = false;

    sum();
    sum(1, 3, 5);

    my $char : char = 'a';
  }
}
